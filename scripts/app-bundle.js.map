{"version":3,"sources":["environment.ts","C:/Git/aurelia-modules-example/src/aurelia-modules/module.models.js","main.ts","aurelia-modules/module.manager.ts","aurelia-modules/base-aurelia-module.ts","aurelia-modules/module.decorator.ts","aurelia-modules/index.ts","main-app/index.ts","main-app/pages/home.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export default {\n  debug: true,\n  testing: true\n};\n",null,"import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\nimport {IModuleConfiguration} from \"./aurelia-modules/module.models\";\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  const moduleConfiguration: IModuleConfiguration = {\n    module: \"main-app\",\n    identifier: \"official-main-app\",\n    title: \"App entry point\",\n    children: [\n      {\n        module: \"main-app\",\n        identifier: \"second-main-app-2\",\n        title: \"second App entry point in second\",\n        children: [{\n          module: \"main-app\",\n          identifier: \"third-main-app\",\n          title: \"third App entry point\",\n          children: []\n        }]\n      },\n      {\n        module: \"main-app\",\n        identifier: \"second-main-app\",\n        title: \"second App entry point\",\n        route: \"alternate-route-to-module\",\n        children: [{\n          module: \"main-app\",\n          identifier: \"third-main-app\",\n          title: \"third App entry point\",\n          children: []\n        }]\n      }\n    ]\n  };\n\n  aurelia.use\n    .standardConfiguration()\n    .feature('main-app')\n    .feature('aurelia-modules', moduleConfiguration);\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() =>\n    aurelia.setRoot(\"main-app/index\", document.body));\n}\n","import {\n  IRegisteredModule,\n  IAureliaModule,\n  IModuleConfiguration,\n  InstancedModule,\n  AureliaModuleInitializer\n} from \"./module.models\";\n\nexport class ModuleManager {\n  private static registeredModules: IRegisteredModule[] = [];\n\n  public static fullModuleConfiguration: IModuleConfiguration;\n\n  public static registerModule(name: string, module: AureliaModuleInitializer): void {\n    this.registeredModules.push({name, module, asPlugin: false});\n  }\n\n  public registerModule(name: string, module: (...args: any[]) => IAureliaModule): void {\n    ModuleManager.registerModule(name, module);\n  }\n\n  public getModuleConfiguration(name?: string, config?: IModuleConfiguration): IModuleConfiguration {\n    if (!config) {\n      return ModuleManager.fullModuleConfiguration;\n\n    }\n    if (name) {\n      return config.children.find((moduleConfig: IModuleConfiguration) => {\n        return moduleConfig.module === name;\n      })\n    } else {\n      return config[0];\n    }\n  }\n\n  public getModule(module: string): IRegisteredModule {\n    return ModuleManager.registeredModules.find((registeredModule: IRegisteredModule) => {\n      return registeredModule.name === module;\n    });\n  }\n\n  public getChildModules(moduleConfiguration: IModuleConfiguration): InstancedModule[] {\n    let result: InstancedModule[] = [];\n    if (moduleConfiguration.children && moduleConfiguration.children.length > 0) {\n      for (let childModule of moduleConfiguration.children) {\n        const module = this.getModule(childModule.module);\n        if (module) {\n          result.push(\n            {\n              module: module,\n              config: childModule\n            }\n          );\n        }\n      }\n    }\n    return result;\n  }\n}\n\n","import {ModuleManager} from \"./module.manager\";\nimport {RouteMapper} from \"aurelia-route-mapper\";\nimport {RouteConfig, Router, RouterConfiguration} from \"aurelia-router\";\nimport {IAureliaModule, IModuleConfiguration, InstancedModule} from \"./module.models\";\nimport {autoinject} from \"aurelia-dependency-injection\";\n\n@autoinject()\nexport abstract class BaseAureliaModule implements IAureliaModule {\n  public router: Router;\n  protected moduleConfiguration: IModuleConfiguration;\n\n  constructor(public routeMapper: RouteMapper, private moduleManager: ModuleManager) {\n  }\n\n  public abstract getModuleName(): string;\n\n  public getRoutes(): RouteConfig[] {\n    return this.childModuleRoutes;\n  };\n\n  public get childModules(): InstancedModule[] {\n    return this.moduleManager.getChildModules(this.moduleConfiguration)\n  };\n\n  public get childModuleRoutes(): RouteConfig[] {\n    let result: RouteConfig[] = [];\n    this.childModules.forEach((childModule: InstancedModule) => {\n      result.push({\n        name: childModule.config.identifier || childModule.config.module,\n        title: childModule.config.title || childModule.config.module,\n        route: childModule.config.route || childModule.config.module ,\n        nav: true,\n        moduleId: childModule.module.asPlugin? childModule.module.name : `../${childModule.module.name}/index`,\n        settings: {\n          moduleConfig: childModule.config\n        }\n      });\n    });\n    return result;\n  }\n\n  public configureRouter(routerConfiguration: RouterConfiguration,\n                         router: Router,\n                         params: Object,\n                         routeConfig?: RouteConfig): void {\n    this.setModuleConfiguration(routeConfig);\n    if(routerConfiguration) {\n      const routes = this.getRoutes();\n      routerConfiguration.map(routes);\n      this.routeMapper.map(routes)\n    }\n    this.router = router;\n  }\n\n  private setModuleConfiguration(routeConfig?:RouteConfig){\n    if (routeConfig && routeConfig.settings.moduleConfig) {\n      this.moduleConfiguration = routeConfig.settings.moduleConfig;\n    }else{\n      this.moduleConfiguration = this.moduleManager.getModuleConfiguration(this.getModuleName());\n    }\n  }\n\n\n}\n","import {ModuleManager} from \"./module.manager\";\n\nexport function module<T>(name: string): ClassDecorator{\n  return <AureliaModuleInitializer>(target: AureliaModuleInitializer) => {\n    if(target){\n      ModuleManager.registerModule(name, <any>target);\n    }\n    return target;\n  }\n}\n","import {FrameworkConfiguration} from \"aurelia-framework\";\nimport {IModuleConfiguration} from \"./module.models\";\nimport {ModuleManager} from \"./module.manager\";\nexport * from \"./base-aurelia-module\";\nexport * from \"./module.decorator\";\nexport * from \"./module.manager\";\nexport * from \"./module.models\";\n\n\nexport function configure(config: FrameworkConfiguration, moduleConfiguration: IModuleConfiguration ){\n  ModuleManager.fullModuleConfiguration = moduleConfiguration;\n}\n","import {RouteConfig} from \"aurelia-router\";\nimport {autoinject} from \"aurelia-dependency-injection\";\nimport {FrameworkConfiguration} from \"aurelia-framework\";\nimport {BaseAureliaModule, module} from \"../aurelia-modules/index\";\n\n@autoinject()\n@module(\"main-app\")\nexport class MainApplication extends BaseAureliaModule  {\n  public getModuleName(): string {\n    return \"main-app\";\n  }\n  public getRoutes(): RouteConfig[] {\n    return [\n      {\n        name: \"home\",\n        title: \"home\",\n        route: \"/\",\n        nav: true,\n        moduleId: \"./pages/home\"\n      },\n      ...super.getRoutes()\n    ];\n  };\n\n}\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n\n","export class Home{\n\n}\n"],"sourceRoot":"../src"}